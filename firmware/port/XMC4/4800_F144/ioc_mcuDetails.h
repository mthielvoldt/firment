#ifndef ioc_mcuDetails_H
#define ioc_mcuDetails_H

#include "xmc4_gpio_map.h"
#include "xmc_gpio.h"
#include "xmc_eru.h"

#define OUTPUT_COUNT_PER_ERU 4
#define ERU_COUNT 2

typedef struct _RTE_IOC
{
  uint8_t eruId;
  XMC_GPIO_PORT_t *port;
  uint8_t pin;
  XMC_ERU_t *eru;
  uint8_t etlNum;
  XMC_ERU_ETL_SOURCE_t source;
  uint8_t inputChannel;
  IRQn_Type usableIrqNums[OUTPUT_COUNT_PER_ERU];
} RTE_IOC_t;

#define ERU0_IRQNs {ERU0_0_IRQn, ERU0_1_IRQn, ERU0_2_IRQn, ERU0_3_IRQn}
#define ERU1_IRQNs {ERU1_0_IRQn, ERU1_1_IRQn, ERU1_2_IRQn, ERU1_3_IRQn}

#define IOC_0   {0, P0_0,  ERU0_ETL0, XMC_ERU_ETL_SOURCE_B, 0U, ERU0_IRQNs} // ERU0.0B0
#define IOC_1   {0, P0_1,  ERU0_ETL0, XMC_ERU_ETL_SOURCE_A, 0U, ERU0_IRQNs} // ERU0.0A0
#define IOC_2   {0, P0_2,  ERU0_ETL3, XMC_ERU_ETL_SOURCE_B, 3U, ERU0_IRQNs} // ERU0.3B3
#define IOC_3   {1, P0_3,  ERU1_ETL3, XMC_ERU_ETL_SOURCE_B, 0U, ERU1_IRQNs} // ERU1.3B0
#define IOC_4   {0, P0_4,  ERU0_ETL2, XMC_ERU_ETL_SOURCE_B, 3U, ERU0_IRQNs} // ERU0.2B3
#define IOC_5   {1, P0_5,  ERU1_ETL3, XMC_ERU_ETL_SOURCE_A, 0U, ERU1_IRQNs} // ERU1.3A0
#define IOC_6   {0, P0_6,  ERU0_ETL3, XMC_ERU_ETL_SOURCE_B, 2U, ERU0_IRQNs} // ERU0.3B2
#define IOC_7   {0, P0_7,  ERU0_ETL2, XMC_ERU_ETL_SOURCE_B, 1U, ERU0_IRQNs} // ERU0.2B1
#define IOC_8   {0, P0_8,  ERU0_ETL2, XMC_ERU_ETL_SOURCE_A, 1U, ERU0_IRQNs} // ERU0.2A1
#define IOC_9   {0, P0_9,  ERU0_ETL1, XMC_ERU_ETL_SOURCE_B, 0U, ERU0_IRQNs} // ERU0.1B0
#define IOC_10  {0, P0_10, ERU0_ETL1, XMC_ERU_ETL_SOURCE_A, 0U, ERU0_IRQNs} // ERU0.1A0
#define IOC_11  {0, P0_11, ERU0_ETL3, XMC_ERU_ETL_SOURCE_A, 2U, ERU0_IRQNs} // ERU0.3A2
#define IOC_12  {0, P0_12, ERU0_ETL2, XMC_ERU_ETL_SOURCE_B, 2U, ERU0_IRQNs} // ERU0.2B2
#define IOC_13  {0, P0_13, ERU0_ETL2, XMC_ERU_ETL_SOURCE_A, 2U, ERU0_IRQNs} // ERU0.2A2
#define IOC_14  {0, P1_0,  ERU0_ETL3, XMC_ERU_ETL_SOURCE_B, 0U, ERU0_IRQNs} // ERU0.3B0
#define IOC_15  {0, P1_1,  ERU0_ETL3, XMC_ERU_ETL_SOURCE_A, 0U, ERU0_IRQNs} // ERU0.3A0
#define IOC_16  {1, P1_2,  ERU1_ETL2, XMC_ERU_ETL_SOURCE_B, 0U, ERU1_IRQNs} // ERU1.2B0
#define IOC_17  {1, P1_3,  ERU1_ETL2, XMC_ERU_ETL_SOURCE_A, 0U, ERU1_IRQNs} // ERU1.2A0
#define IOC_18  {0, P1_4,  ERU0_ETL2, XMC_ERU_ETL_SOURCE_B, 0U, ERU0_IRQNs} // ERU0.2B0
#define IOC_19  {0, P1_5,  ERU0_ETL2, XMC_ERU_ETL_SOURCE_A, 0U, ERU0_IRQNs} // ERU0.2A0
#define IOC_20  {1, P1_5,  ERU1_ETL0, XMC_ERU_ETL_SOURCE_A, 0U, ERU1_IRQNs} // ERU1.0A0
#define IOC_21  {1, P1_15, ERU1_ETL1, XMC_ERU_ETL_SOURCE_A, 0U, ERU1_IRQNs} // ERU1.1A0
#define IOC_22  {0, P2_0,  ERU0_ETL0, XMC_ERU_ETL_SOURCE_B, 3U, ERU0_IRQNs} // ERU0.0B3
#define IOC_23  {1, P2_1,  ERU1_ETL0, XMC_ERU_ETL_SOURCE_B, 0U, ERU1_IRQNs} // ERU1.0B0
#define IOC_24  {0, P2_2,  ERU0_ETL1, XMC_ERU_ETL_SOURCE_B, 2U, ERU0_IRQNs} // ERU0.1B2
#define IOC_25  {0, P2_3,  ERU0_ETL1, XMC_ERU_ETL_SOURCE_A, 2U, ERU0_IRQNs} // ERU0.1A2
#define IOC_26  {0, P2_4,  ERU0_ETL0, XMC_ERU_ETL_SOURCE_B, 2U, ERU0_IRQNs} // ERU0.0B2
#define IOC_27  {0, P2_5,  ERU0_ETL0, XMC_ERU_ETL_SOURCE_A, 2U, ERU0_IRQNs} // ERU0.0A2
#define IOC_28  {0, P2_6,  ERU0_ETL1, XMC_ERU_ETL_SOURCE_B, 3U, ERU0_IRQNs} // ERU0.1B3
#define IOC_29  {1, P2_7,  ERU1_ETL1, XMC_ERU_ETL_SOURCE_B, 0U, ERU1_IRQNs} // ERU1.1B0
#define IOC_30  {0, P3_1,  ERU0_ETL0, XMC_ERU_ETL_SOURCE_B, 1U, ERU0_IRQNs} // ERU0.0B1
#define IOC_31  {0, P3_2,  ERU0_ETL0, XMC_ERU_ETL_SOURCE_A, 1U, ERU0_IRQNs} // ERU0.0A1
#define IOC_32  {0, P3_5,  ERU0_ETL3, XMC_ERU_ETL_SOURCE_B, 1U, ERU0_IRQNs} // ERU0.3B1
#define IOC_33  {0, P3_6,  ERU0_ETL3, XMC_ERU_ETL_SOURCE_A, 1U, ERU0_IRQNs} // ERU0.3A1

/* These indicate which IOCs can be routed to which ISRs (IRQHandlers)
This is dependent on which ERU the IOC uses.*/
#define IOC_3_to_ISR_4 4
#define IOC_3_to_ISR_5 5
#define IOC_3_to_ISR_6 6
#define IOC_3_to_ISR_7 7

#define IOC_4_to_ISR_0 0
#define IOC_4_to_ISR_1 1
#define IOC_4_to_ISR_2 2
#define IOC_4_to_ISR_3 3

#define IOC_14_to_ISR_0 0
#define IOC_14_to_ISR_1 1
#define IOC_14_to_ISR_2 2
#define IOC_14_to_ISR_3 3

#endif // ioc_mcuDetails_H
