/** Provides project-specific config for CMSIS (ARM) SPI Driver.
 * 
 * @brief
 * Normally, these macros are defined in MX_Device.h, which is generated by a 
 * tool called csolution, which is part of cmsis-toolbox. 
 * https://github.com/Open-CMSIS-Pack/cmsis-toolbox
 * MX_Device.h combines details for various drivers (SPI, CAN...)
 * 
 * Rather than rely on the generator, this file is hand-edited.
 * See MX_Device.h in same directory as this file for an explanation. 
 *
 * Source-of-Truth for:
 * - availability of HW resources consistent with PCB connections.
 *
 * Language level:
 * - Project  num inbound
 * - HAL      yes outbound
 * - dev.fam  no
 * - device   no
 * 
 * @note
 * - GPIO_MODE_AF_PP doesn't imply output.  AF = alternate function.  PP means
 *   push-pull is available for perpiheral to use, but not necessarily used.
 * 
 * @note Recommended Edit Process
 * - _Pin, _GPIO_Pin, _GPIOx values can be inspected in CubeMX, PCB schematic,
 *   or looked up in Table 17. Alternate function AF0 to AF7bin datasheet 
 *   https://www.st.com/resource/en/datasheet/stm32l476rg.pdf.
 * - All _Mode are GPIO_MODE_AF_PP. This just gives peripheral control of pin.
 * - All _PuPd are GPIO_NOPULL.  No pull resistors connected.
 * - All _Speed are GPIO_SPEED_FREQ_LOW. **Not sure why**
 * - Look up the proper _AF value in stm32<fam>xx_hal_gpio_ex.h.  Here's how: 
 *   - Assuming you're using SPI3, Search for regex: "GPIO_AF[0-9]_SPI3".
 *   - Inspect each result to find the one that applies to your device.  This 
 *     can be made obvious by defining your device in c_cpp_properties.json
 *     eg: "defines": ["STM32L476xx"].  The right value will be the one search
 *     result in an active code block. 
 */
#ifndef spi_pcbDetails_h
#define spi_pcbDetails_h

#include <stm32l4xx_hal_dma.h>  // DMA_HandleTypeDef (needed by _hal_spi.h)
#include <stm32l4xx_hal_spi.h>
#include <stm32l4xx_hal_spi_ex.h>
#include <stm32l4xx.h>
#include <stm32l4xx_hal_gpio.h>
#include <stm32l4xx_hal_gpio_ex.h>

#define MX_SPI2 1
#define MX_SPI2_PERIPH_CLOCK_FREQ               80000000

#define FMT_DRIVER Driver_SPI2
#define FMT_DRIVER_ID 2
#define FMT_BAUD_HZ 1000000


#define FMT_SPI_GPIO_AF                    GPIO_AF5_SPI2

#define FMT_SPI_MISO_Pin                        PB14
#define FMT_SPI_MISO_GPIO_Pin                   GPIO_PIN_14
#define FMT_SPI_MISO_GPIOx                      GPIOB

#define FMT_SPI_MOSI_Pin                        PB15
#define FMT_SPI_MOSI_GPIO_Pin                   GPIO_PIN_15
#define FMT_SPI_MOSI_GPIOx                      GPIOB

#define FMT_SPI_NSS_Pin                         PB12
#define FMT_SPI_NSS_GPIO_Pin                    GPIO_PIN_12
#define FMT_SPI_NSS_GPIOx                       GPIOB

#define FMT_SPI_SCK_Pin                         PB13
#define FMT_SPI_SCK_GPIO_Pin                    GPIO_PIN_13
#define FMT_SPI_SCK_GPIOx                       GPIOB

/* Needed by SPI_STM32 to configure the NSS pin. (Line 296)*/
#define MX_SPI2_NSS_Pin        FMT_SPI_NSS_Pin
#define MX_SPI2_NSS_GPIOx      FMT_SPI_NSS_GPIOx
#define MX_SPI2_NSS_GPIO_Pin   FMT_SPI_NSS_GPIO_Pin
#define MX_SPI2_NSS_GPIO_AF    FMT_SPI_GPIO_AF
#define MX_SPI2_NSS_GPIO_PuPd  GPIO_NOPULL
#define MX_SPI2_NSS_GPIO_Speed GPIO_SPEED_FREQ_VERY_HIGH

#endif // include once
